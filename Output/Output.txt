

    import pandas as pd

    path="/content/drive/MyDrive/Datasets/Assignment_Timecard.xlsx - Sheet1.csv"
    df=pd.read_csv(path)
    df.head(5)

      Position ID Position Status                 Time             Time Out  \
    0   WFS000054          Active                  NaN                  NaN   
    1   WFS000065          Active  09/12/2023 10:08 AM  09/12/2023 01:53 PM   
    2   WFS000065          Active  09/12/2023 02:23 PM  09/12/2023 07:02 PM   
    3   WFS000065          Active  09/13/2023 10:08 AM  09/13/2023 02:20 PM   
    4   WFS000065          Active  09/13/2023 02:50 PM  09/13/2023 08:44 PM   

      Timecard Hours (as Time) Pay Cycle Start Date Pay Cycle End Date  \
    0                      NaN                  NaN                NaN   
    1                     3:45           09/10/2023         09/23/2023   
    2                     4:39           09/10/2023         09/23/2023   
    3                     4:12           09/10/2023         09/23/2023   
    4                     5:54           09/10/2023         09/23/2023   

         Employee Name  File Number  Unnamed: 9 Unnamed: 10  
    0  SiWgh, PraGhjEM           54         NaN         NaN  
    1  REsaXiaWE, XAis           65         NaN         NaN  
    2  REsaXiaWE, XAis           65         NaN         NaN  
    3  REsaXiaWE, XAis           65         NaN         NaN  
    4  REsaXiaWE, XAis           65         NaN         NaN  

    # Create a boolean column 'consecutive' which is True if an 'id' is the same as the previous one
    df['consecutive'] = df['Position ID'].shift() == df['Position ID']

    # Create a column 'group' which increments when 'consecutive' is False
    df['group'] = df['consecutive'].apply(lambda x: 1 if not x else 0).cumsum()

    # Group by 'group' and 'id', and filter groups with size == 7
    filtered_df = df.groupby(['group', 'Position ID']).filter(lambda x: len(x) == 7)

    filtered_df.head(15)

         Position ID Position Status                 Time             Time Out  \
    672    WFS000465          Active  09/11/2023 10:42 AM  09/11/2023 02:30 PM   
    673    WFS000465          Active  09/11/2023 03:00 PM  09/11/2023 04:00 PM   
    674    WFS000465          Active  09/15/2023 10:50 AM  09/15/2023 02:00 PM   
    675    WFS000465          Active  09/15/2023 02:30 PM  09/15/2023 04:33 PM   
    676    WFS000465          Active  09/16/2023 10:10 AM  09/16/2023 02:30 PM   
    677    WFS000465          Active  09/16/2023 03:00 PM  09/16/2023 05:23 PM   
    678    WFS000465          Active  09/22/2023 10:46 AM  09/22/2023 12:00 PM   
    928    WFS000514          Active  09/10/2023 10:43 AM  09/10/2023 02:30 PM   
    929    WFS000514          Active  09/10/2023 03:00 PM  09/10/2023 06:00 PM   
    930    WFS000514          Active  09/11/2023 10:44 AM  09/11/2023 12:00 PM   
    931    WFS000514          Active  09/17/2023 09:59 AM  09/17/2023 02:30 PM   
    932    WFS000514          Active  09/17/2023 03:00 PM  09/17/2023 05:41 PM   
    933    WFS000514          Active  09/19/2023 10:28 AM  09/19/2023 02:30 PM   
    934    WFS000514          Active  09/19/2023 03:00 PM  09/19/2023 07:02 PM   
    1079   WFS000538          Active  09/12/2023 02:42 AM  09/12/2023 07:00 AM   

         Timecard Hours (as Time) Pay Cycle Start Date Pay Cycle End Date  \
    672                      3:48           09/10/2023         09/23/2023   
    673                      1:00           09/10/2023         09/23/2023   
    674                      3:10           09/10/2023         09/23/2023   
    675                      2:03           09/10/2023         09/23/2023   
    676                      4:20           09/10/2023         09/23/2023   
    677                      2:23           09/10/2023         09/23/2023   
    678                      1:14           09/10/2023         09/23/2023   
    928                      3:47           09/10/2023         09/23/2023   
    929                      3:00           09/10/2023         09/23/2023   
    930                      1:16           09/10/2023         09/23/2023   
    931                      4:31           09/10/2023         09/23/2023   
    932                      2:41           09/10/2023         09/23/2023   
    933                      4:02           09/10/2023         09/23/2023   
    934                      4:02           09/10/2023         09/23/2023   
    1079                     4:18           09/10/2023         09/23/2023   

                    Employee Name  File Number  Unnamed: 9 Unnamed: 10  \
    672             CeWdEza, Erik          465         NaN         NaN   
    673             CeWdEza, Erik          465         NaN         NaN   
    674             CeWdEza, Erik          465         NaN         NaN   
    675             CeWdEza, Erik          465         NaN         NaN   
    676             CeWdEza, Erik          465         NaN         NaN   
    677             CeWdEza, Erik          465         NaN         NaN   
    678             CeWdEza, Erik          465         NaN         NaN   
    928        CaraGiXXa, AWMhEWy          514         NaN         NaN   
    929        CaraGiXXa, AWMhEWy          514         NaN         NaN   
    930        CaraGiXXa, AWMhEWy          514         NaN         NaN   
    931        CaraGiXXa, AWMhEWy          514         NaN         NaN   
    932        CaraGiXXa, AWMhEWy          514         NaN         NaN   
    933        CaraGiXXa, AWMhEWy          514         NaN         NaN   
    934        CaraGiXXa, AWMhEWy          514         NaN         NaN   
    1079  HAWMer, ViWceWM De PaAX          538         NaN         NaN   

          consecutive  group  
    672         False     47  
    673          True     47  
    674          True     47  
    675          True     47  
    676          True     47  
    677          True     47  
    678          True     47  
    928         False     63  
    929          True     63  
    930          True     63  
    931          True     63  
    932          True     63  
    933          True     63  
    934          True     63  
    1079        False     76  

    #a) who has worked for 7 consecutive days.
    # Print the unique 'Employee Name' and 'Position ID'
    print("The name and the position of the Employees who has worked for 7 consecutive days is:")
    print(filtered_df[['Employee Name', 'Position ID']].drop_duplicates())

    The name and the position of the Employees who has worked for 7 consecutive days is:
                     Employee Name Position ID
    672              CeWdEza, Erik   WFS000465
    928         CaraGiXXa, AWMhEWy   WFS000514
    1079   HAWMer, ViWceWM De PaAX   WFS000538
    1319  CiGriaW DeXgadE, EXeWa S   WFS000574

    df['Time'] = pd.to_datetime(df['Time'])
    df['Time Out'] = pd.to_datetime(df['Time Out'])

    df['Duration'] = df['Time Out'] - df['Time']

    df['Duration'].head(7)

    0               NaT
    1   0 days 03:45:00
    2   0 days 04:39:00
    3   0 days 04:12:00
    4   0 days 05:54:00
    5   0 days 04:21:00
    6   0 days 04:14:00
    Name: Duration, dtype: timedelta64[ns]

    # c) Who has worked for more than 14 hours in a single shift
    selected_employees = df[df['Duration'] > pd.Timedelta('14 hours')]['Employee Name']

    # Display the result
    print(selected_employees)

    1036    DeXgadiXXE REdarMe, ChrisMiaW S
    Name: Employee Name, dtype: object

    df = df.sort_values(by=['Position ID', 'Time'])

    df.head(5)

      Position ID Position Status                Time            Time Out  \
    0   WFS000054          Active                 NaT                 NaT   
    1   WFS000065          Active 2023-09-12 10:08:00 2023-09-12 13:53:00   
    2   WFS000065          Active 2023-09-12 14:23:00 2023-09-12 19:02:00   
    3   WFS000065          Active 2023-09-13 10:08:00 2023-09-13 14:20:00   
    4   WFS000065          Active 2023-09-13 14:50:00 2023-09-13 20:44:00   

      Timecard Hours (as Time) Pay Cycle Start Date Pay Cycle End Date  \
    0                      NaN                  NaN                NaN   
    1                     3:45           09/10/2023         09/23/2023   
    2                     4:39           09/10/2023         09/23/2023   
    3                     4:12           09/10/2023         09/23/2023   
    4                     5:54           09/10/2023         09/23/2023   

         Employee Name  File Number  Unnamed: 9 Unnamed: 10  consecutive  group  \
    0  SiWgh, PraGhjEM           54         NaN         NaN        False      1   
    1  REsaXiaWE, XAis           65         NaN         NaN        False      2   
    2  REsaXiaWE, XAis           65         NaN         NaN         True      2   
    3  REsaXiaWE, XAis           65         NaN         NaN         True      2   
    4  REsaXiaWE, XAis           65         NaN         NaN         True      2   

             Duration  
    0             NaT  
    1 0 days 03:45:00  
    2 0 days 04:39:00  
    3 0 days 04:12:00  
    4 0 days 05:54:00  

    df['Time Difference'] = df.groupby('Position ID')['Time'].shift(-1) - df['Time Out']

    print(df['Time Difference'])

    0                  NaT
    1      0 days 00:30:00
    2      0 days 15:06:00
    3      0 days 00:30:00
    4      0 days 13:25:00
                 ...      
    1479   0 days 00:30:00
    1480   0 days 14:27:00
    1481   0 days 00:30:00
    1482               NaT
    1483               NaT
    Name: Time Difference, Length: 1484, dtype: timedelta64[ns]

    #  b) who have less than 10 hours of time between shifts but greater than 1 hour
    selected_employees = df[(df['Time Difference'] < pd.Timedelta('10 hours')) & (df['Time Difference'] > pd.Timedelta('1 hour'))]

    # Display the result
    print(selected_employees[['Position ID', 'Time', 'Time Out', 'Time Difference']])

         Position ID                Time            Time Out Time Difference
    53     WFS000153 2023-09-11 13:30:00 2023-09-11 16:46:00 0 days 02:15:00
    64     WFS000153 2023-09-20 09:00:00 2023-09-20 17:03:00 0 days 01:29:00
    162    WFS000200 2023-09-11 10:00:00 2023-09-11 14:19:00 0 days 09:41:00
    173    WFS000200 2023-09-18 09:00:00 2023-09-18 14:30:00 0 days 08:30:00
    176    WFS000200 2023-09-19 09:00:00 2023-09-19 13:48:00 0 days 09:12:00
    276    WFS000318 2023-09-22 10:00:00 2023-09-22 12:00:00 0 days 03:00:00
    311    WFS000345 2023-09-20 19:00:00 2023-09-20 22:15:00 0 days 09:45:00
    591    WFS000456 2023-09-14 00:56:00 2023-09-14 03:49:00 0 days 04:11:00
    1036   WFS000523 2023-09-17 04:00:00 2023-09-17 19:30:00 0 days 03:57:00
    1074   WFS000536 2023-09-21 15:30:00 2023-09-21 16:05:00 0 days 02:40:00
    1161   WFS000550 2023-09-23 10:04:00 2023-09-23 14:36:00 0 days 01:09:00
